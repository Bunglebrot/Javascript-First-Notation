// отличия объявления переменных старого синтаксиса ```var``` от нового ```let``` и ```const```
var a = 25
// ключевое слово var имеет глобальную область видимости и hoisting(всплытие)
// т.е. переменная инициализированная ключевым словом var будет видна в любом месте данного документа
if(true){
  var a = 42
  console.log(`здесь переменная а перезаписалась навсегда == ${a}`)
}
console.log(a)
// все переменные, объявленные в документе через var, отправляются в глобальный скоуп
a1 = 13
console.log(`здесь переменная а1, объявленная ниже, улетает в скоуп. и если выше её не переопределять, то вернёт undefined. но раз так, то она == ${a1}`)
var a1 = 15

// ключевое слово let имеет блочную область видимости.
// т.е. переменные объявленные внутри фигурных скобок таких конструкций, как условия, циклы и функции
// нельзя использовать снаружи этих конструкций
// !!! наверное за исключением замыкания..уточнить
// если переменные с одинаковыми именами, где первая определёна в объекте.window, а другая в блоке 
// - вне блока преимущество будет у той, что объявленна глобально
let b = 224
if(true){
  let b = 335
  console.log(b)
}
console.log(b)
// переменные объявленные через let или const не имеют hoisting'a - к ним можно обращаться только после их определения
// за исключением, если переменные используются в функции, но объявляются через let до вызова этой функции
function hoisted(){
  variable += 15
  return variable
}
let variable = 10
console.log(hoisted())

// переменные объявленные через ключевое слово const
// изменение значения, хранимое в const, приведёт к Typeerror ошибке
// т.е. её нельзя переопределить. за исключением внутреннего состояния массивов и объектов
const array = [1, 2, 3, 5, 8]
console.log(array)
array.push(13)
console.log(array)
const obj = {age: 42}
console.log(obj)
obj.name = 'Konstantin'
console.log(obj)